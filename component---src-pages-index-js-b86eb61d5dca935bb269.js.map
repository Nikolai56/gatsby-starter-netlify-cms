{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","props","handleChangeTag","e","tag","activeEls","document","querySelectorAll","preventDefault","forEach","el","classList","remove","target","parentElement","add","setState","handleCloseMenu","handleToggleMenu","isMenuOpen","state","render","posts","this","data","allMarkdownRemark","edges","className","onClick","style","alignItems","justifyContent","xmlns","viewBox","width","height","focusable","stroke","strokeWidth","strokeLinecap","strokeMiterlimit","d","marginLeft","href","isOpened","filter","post","node","frontmatter","templateKey","tags","includes","map","key","id","to","fields","slug","src","imageInList","alt","title","date","React","Component","pageQuery"],"mappings":"yQAKqBA,E,YACjB,WAAYC,GAAQ,IAAD,SACf,cAAMA,IAAN,MAOJC,gBAAkB,SAACC,EAAGC,GAClB,IAAMC,EAAYC,SAASC,iBAAiB,uBAE5CJ,EAAEK,iBACFH,EAAUI,SAAQ,SAAAC,GAAE,OAAIA,EAAGC,UAAUC,OAAO,aAC5CT,EAAEU,OAAOC,cAAcH,UAAUI,IAAI,UACrC,EAAKC,SAAS,CAAEZ,QAChB,EAAKa,mBAfU,EAkBnBC,iBAAmB,WACf,EAAKF,SAAS,CAAEG,YAAa,EAAKC,MAAMD,cAnBzB,EAsBnBF,gBAAkB,WACd,EAAKD,SAAS,CAAEG,YAAY,KArB5B,EAAKC,MAAQ,CACThB,IAAK,MACLe,YAAY,GAJD,E,oCA0BnBE,OAAA,WAAU,IAAD,OAEUC,EADEC,KAAKtB,MAAduB,KACsBC,kBAAtBC,MAER,OACI,kBAAC,IAAD,KACI,yBAAKC,UAAU,QACX,yBAAKA,UAAU,aAGX,yBAAKA,UAAU,eAAeC,QAASL,KAAKL,iBAAkBW,MAAO,CACjEC,WAAY,SACZC,eAAgB,WAEhB,yBAAKC,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAAKC,UAAU,SAAQ,uCAAmB,0BAAMC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,iBAAiB,KAAKC,EAAE,6BAClN,0BAAMZ,MAAO,CAACa,WAAY,IAA1B,cAEJ,wBAAIf,UAAU,cACV,4BAAI,uBAAGgB,KAAK,IAAIf,QAAS,SAACzB,GAAD,OAAO,EAAKD,gBAAgBC,EAAE,SAAnD,SACJ,4BAAI,uBAAGwC,KAAK,IAAIf,QAAS,SAACzB,GAAD,OAAO,EAAKD,gBAAgBC,EAAE,WAAnD,WACJ,4BAAI,uBAAGwC,KAAK,IAAIf,QAAS,SAACzB,GAAD,OAAO,EAAKD,gBAAgBC,EAAE,gBAAnD,gBACJ,4BAAI,uBAAGwC,KAAK,IAAIf,QAAS,SAACzB,GAAD,OAAO,EAAKD,gBAAgBC,EAAE,sBAAnD,sBACJ,4BAAI,uBAAGwC,KAAK,IAAIf,QAAS,SAACzB,GAAD,OAAO,EAAKD,gBAAgBC,EAAE,+BAAnD,+BACJ,4BAAI,uBAAGwC,KAAK,IAAIf,QAAS,SAACzB,GAAD,OAAO,EAAKD,gBAAgBC,EAAE,iBAAnD,kBAER,kBAAC,WAAD,CAAUyC,SAAUrB,KAAKH,MAAMD,YAC3B,wBAAIQ,UAAU,gCACV,4BAAI,uBAAGgB,KAAK,IAAIf,QAAS,SAACzB,GAAD,OAAO,EAAKD,gBAAgBC,EAAE,SAAnD,SACJ,4BAAI,uBAAGwC,KAAK,IAAIf,QAAS,SAACzB,GAAD,OAAO,EAAKD,gBAAgBC,EAAE,WAAnD,WACJ,4BAAI,uBAAGwC,KAAK,IAAIf,QAAS,SAACzB,GAAD,OAAO,EAAKD,gBAAgBC,EAAE,gBAAnD,gBACJ,4BAAI,uBAAGwC,KAAK,IAAIf,QAAS,SAACzB,GAAD,OAAO,EAAKD,gBAAgBC,EAAE,sBAAnD,sBACJ,4BAAI,uBAAGwC,KAAK,IAAIf,QAAS,SAACzB,GAAD,OAAO,EAAKD,gBAAgBC,EAAE,+BAAnD,+BACJ,4BAAI,uBAAGwC,KAAK,IAAIf,QAAS,SAACzB,GAAD,OAAO,EAAKD,gBAAgBC,EAAE,iBAAnD,qBAKpB,6BAASwB,UAAU,aACf,yBAAKA,UAAU,mBACVL,EACIuB,QAAO,SAAAC,GAAI,MAA0C,iBAAtCA,EAAKC,KAAKC,YAAYC,eACrCJ,QAAO,SAAAC,GAAI,OAAI,YAAIA,EAAKC,KAAKC,YAAYE,MAAMC,SAAS,EAAK/B,MAAMhB,QACnEgD,KAAI,gBAASN,EAAT,EAAGC,KAAH,OACD,kBAAC,IAAD,CAAMM,IAAKP,EAAKQ,GAAIC,GAAIT,EAAKU,OAAOC,KAAM9B,UAAU,gBAChD,yBAAK+B,IAAKZ,EAAKE,YAAYW,YAAaC,IAAQd,EAAKE,YAAYa,MAAtB,MAAiCf,EAAKE,YAAYc,OAC7F,2BAAIhB,EAAKE,YAAYa,e,GAxElBE,IAAMC,WAkFhCC,EAAS","file":"component---src-pages-index-js-b86eb61d5dca935bb269.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { Collapse } from 'react-collapse';\nimport Layout from '../layouts';\n\nexport default class IndexPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tag: 'всё',\n            isMenuOpen: false,\n        };\n    }\n\n    handleChangeTag = (e, tag) => {\n        const activeEls = document.querySelectorAll('.menu_list2 .active');\n\n        e.preventDefault();\n        activeEls.forEach(el => el.classList.remove('active'));\n        e.target.parentElement.classList.add('active');\n        this.setState({ tag });\n        this.handleCloseMenu();\n    };\n\n    handleToggleMenu = () => {\n        this.setState({ isMenuOpen: !this.state.isMenuOpen });\n    };\n\n    handleCloseMenu = () => {\n        this.setState({ isMenuOpen: false });\n    };\n\n    render() {\n        const { data } = this.props;\n        const { edges: posts } = data.allMarkdownRemark;\n\n        return (\n            <Layout>\n                <nav className=\"nav2\">\n                    <div className=\"container\">\n                        {/*<h1 className=\"text-center\">Работы по категориям:</h1>*/}\n                        {/*<br />*/}\n                        <div className=\"menu_toggle2\" onClick={this.handleToggleMenu} style={{\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                        }}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 30 30\" width=\"30\" height=\"30\" focusable=\"false\"><title>Menu</title><path stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeMiterlimit=\"10\" d=\"M4 7h22M4 15h22M4 23h22\" /></svg>\n                            <span style={{marginLeft: 8}}>Категории</span>\n                        </div>\n                        <ul className=\"menu_list2\">\n                            <li><a href=\"#\" onClick={(e) => this.handleChangeTag(e,'всё')}>Всё </a></li>\n                            <li><a href=\"#\" onClick={(e) => this.handleChangeTag(e,'сайты')}>Сайты </a></li>\n                            <li><a href=\"#\" onClick={(e) => this.handleChangeTag(e,'полиграфия')}>Полиграфия </a></li>\n                            <li><a href=\"#\" onClick={(e) => this.handleChangeTag(e,'наружная реклама')}>Наружная реклама </a></li>\n                            <li><a href=\"#\" onClick={(e) => this.handleChangeTag(e,'логотип и фирменный стиль')}>Логотип и фирменный стиль </a></li>\n                            <li><a href=\"#\" onClick={(e) => this.handleChangeTag(e,'иллюстрации')}>Иллюстрации </a></li>\n                        </ul>\n                        <Collapse isOpened={this.state.isMenuOpen}>\n                            <ul className=\"menu_list2 menu_list2-mobile\">\n                                <li><a href=\"#\" onClick={(e) => this.handleChangeTag(e,'всё')}>Всё </a></li>\n                                <li><a href=\"#\" onClick={(e) => this.handleChangeTag(e,'сайты')}>Сайты </a></li>\n                                <li><a href=\"#\" onClick={(e) => this.handleChangeTag(e,'полиграфия')}>Полиграфия </a></li>\n                                <li><a href=\"#\" onClick={(e) => this.handleChangeTag(e,'наружная реклама')}>Наружная реклама </a></li>\n                                <li><a href=\"#\" onClick={(e) => this.handleChangeTag(e,'логотип и фирменный стиль')}>Логотип и фирменный стиль </a></li>\n                                <li><a href=\"#\" onClick={(e) => this.handleChangeTag(e,'иллюстрации')}>Иллюстрации </a></li>\n                            </ul>\n                        </Collapse>\n                    </div>\n                </nav>\n                <section className=\"portfolio\">\n                    <div className=\"container-fluid\">\n                        {posts\n                            .filter(post => post.node.frontmatter.templateKey === 'project-post')\n                            .filter(post => [...post.node.frontmatter.tags].includes(this.state.tag))\n                            .map(({ node: post }) => (\n                                <Link key={post.id} to={post.fields.slug} className='project-link'>\n                                    <img src={post.frontmatter.imageInList} alt={`${post.frontmatter.title} | ${post.frontmatter.date}`} />\n                                    <p>{post.frontmatter.title}</p>\n                                </Link>\n                            ))}\n                    </div>\n                </section>\n            </Layout>\n        )\n    }\n}\n\nexport const pageQuery = graphql`\n  query ProjectQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          excerpt(pruneLength: 400)\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            tags\n            title\n            templateKey\n            date(formatString: \"DD.MM.YYYY\")\n            imageInList\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}